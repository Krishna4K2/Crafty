version: "3.8"

services:
  # ====================================================
  # Frontend Service - Node.js/Express.js
  # ====================================================
  frontend:
    build: ./frontend
    container_name: crafty-frontend
    ports:
      - "3000:3000"
    environment:
      - PRODUCTS_API_BASE_URI=http://catalogue:5000
      - RECOMMENDATION_BASE_URI=http://recommendation:8080
      - VOTING_BASE_URI=http://voting:8086
      - NODE_ENV=production
    networks:
      - crafty-network
    depends_on:
      catalogue:
        condition: service_healthy
      recommendation:
        condition: service_healthy
      voting:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ====================================================
  # Catalogue Service - Python/Flask
  # ====================================================
  catalogue:
    build: ./catalogue
    container_name: crafty-catalogue
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=catalogue-db
      - DB_NAME=catalogue
      - DB_USER=user
      - DB_PASSWORD=password
      - DATA_SOURCE=json
      - APP_VERSION=1.0.0
    networks:
      - crafty-network
    depends_on:
      catalogue-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/products"]
      interval: 30s
      timeout: 10s
      retries: 3

  catalogue-db:
    image: postgres:15
    container_name: crafty-catalogue-db
    restart: always
    environment:
      - POSTGRES_DB=catalogue
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - catalogue_data:/var/lib/postgresql/data
    networks:
      - crafty-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d catalogue"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ====================================================
  # Voting Service - Java/Spring Boot
  # ====================================================
  voting:
    build: ./voting
    container_name: crafty-voting
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - CATALOGUE_SERVICE_URL=http://catalogue:5000/api/products
      - SERVER_PORT=8086
    networks:
      - crafty-network
    depends_on:
      catalogue:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ====================================================
  # Recommendation Service - Go
  # ====================================================
  recommendation:
    build: ./recommendation
    container_name: crafty-recommendation
    ports:
      - "8080:8080"
    environment:
      - CATALOGUE_SERVICE_URL=http://catalogue:5000
    networks:
      - crafty-network
    depends_on:
      catalogue:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  catalogue_data:

networks:
  crafty-network:
    driver: bridge