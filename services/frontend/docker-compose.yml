version: "3.8"

services:
  frontend:
    build: .
    container_name: crafty-frontend
    ports:
      - "3000:3000"
    environment:
      - PRODUCTS_API_BASE_URI=http://catalogue:5000
      - RECOMMENDATION_BASE_URI=http://recommendation:8080
      - VOTING_BASE_URI=http://voting:8086
      - NODE_ENV=production
    networks:
      - frontend-network
    depends_on:
      - catalogue
      - recommendation
      - voting
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Include all services for standalone testing
  catalogue:
    build: ../catalogue
    container_name: crafty-catalogue-standalone
    ports:
      - "5000:5000"
    environment:
      - DATA_SOURCE=json
      - APP_VERSION=1.0.0
    networks:
      - frontend-network
    profiles:
      - full-stack

  recommendation:
    build: ../recommendation
    container_name: crafty-recommendation-standalone
    ports:
      - "8080:8080"
    environment:
      - CATALOGUE_API_URL=http://catalogue:5000/api/products
    networks:
      - frontend-network
    depends_on:
      - catalogue
    profiles:
      - full-stack

  voting:
    build: ../voting
    container_name: crafty-voting-standalone
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=mongodb
      - CATALOGUE_SERVICE_URL=http://catalogue:5000/api/products
      - MONGODB_URI=mongodb://mongo:27017/votingdb
    networks:
      - frontend-network
    depends_on:
      - mongo
    profiles:
      - full-stack

  mongo:
    image: mongo:6
    container_name: crafty-voting-db-standalone
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=votingdb
    volumes:
      - mongo_data:/data/db
    networks:
      - frontend-network
    profiles:
      - full-stack

networks:
  frontend-network:
    driver: bridge
